//GENERATED WITH assets_converter.py

#pragma once

#include <string>

namespace assets
{
	inline const std::string SHADERS_VSIMPLE_GLSL {"#version 330 core\nlayout (location = 0) in vec3 aPos;\n\nuniform mat4 model;\nuniform mat4 view;\nuniform mat4 projection;\n\nvoid main()\n{\n    gl_Position = projection * view * model * vec4(aPos, 1.0);\n}\0"};
	inline const std::string SHADERS_FBASIC_GLSL {"#version 330 core\nout vec4 FragColor;\n\nin vec3 Normal;\nin vec3 FragPos;\n\nuniform vec3 cameraPos;\n\nstruct Material\n{\n    vec3 color;\n    float ambientStrength;\n    float shininess;\n    float specularStrength;\n}; \nuniform Material material;\n\nstruct PointLight\n{\n    vec3 color;\n    vec3 position;\n    float strength;\n    float linear;\n    float quadratic;\n};\nuniform PointLight lights[MAX_POINT_LIGHTS_LENGTH];\nuniform int lightsCount;\n\nstruct DirectionalLight \n{\n    vec3 color;\n    vec3 direction;\n    float strength;\n};\nuniform DirectionalLight directionalLight;\n\nvec3 CalculatePointLight(PointLight pointLight, vec3 normal, vec3 fragPos, vec3 viewDir);\n\nvoid main()\n{\n    vec3 norm = normalize(Normal);\n    vec3 viewDir = normalize(cameraPos - FragPos);\n\n    //directional light\n    vec3 dirLightColor = directionalLight.color * directionalLight.strength;\n    vec3 directionalAmbient = material.ambientStrength * dirLightColor;\n    vec3 dirLightDir = normalize(-directionalLight.direction);\n    float directDiff = max(dot(norm, dirLightDir), 0.f);\n    vec3 directionalDiffuse = directDiff * dirLightColor;\n    vec3 directionalReflectDir = reflect(-dirLightDir, norm);\n    float directionalSpec = pow(max(dot(viewDir, directionalReflectDir), 0.f), material.shininess);\n    vec3 directionalSpecular = dirLightColor * directionalSpec * material.specularStrength;\n    \n    vec3 result = directionalAmbient + directionalDiffuse + directionalSpecular;\n\n    //point lights\n    for(int i = 0; i < lightsCount; i++)\n        result += CalculatePointLight(lights[i], norm, FragPos, viewDir);\n    \n    result *= material.color;\n    FragColor = vec4(result, 1.0f);\n}\n\nvec3 CalculatePointLight(PointLight pointLight, vec3 normal, vec3 fragPos, vec3 viewDir)\n{\n    //ambient\n    vec3 ambient = material.ambientStrength * pointLight.color;\n\n    //diffuse\n    vec3 lightDir = normalize(pointLight.position - fragPos);\n    float diff = max(dot(normal, lightDir), 0.f);\n    vec3 diffuse = diff * pointLight.color;\n\n    //specular\n    vec3 reflectDir = reflect(-lightDir, normal);  \n    float spec = pow(max(dot(viewDir, reflectDir), 0.f), material.shininess);\n    vec3 specular = material.specularStrength * spec * pointLight.color;\n\n    float distance = length(pointLight.position - fragPos);\n    float attenuation = 1.0 / (pointLight.strength + pointLight.linear * distance + pointLight.quadratic * (distance * distance));\n\n    ambient *= attenuation;\n    diffuse *= attenuation;\n    specular *= attenuation;\n\n    return ambient + diffuse + specular;\n}\0"};
	inline const std::string SHADERS_V2D_GLSL {"#version 330 core\nlayout (location = 0) in vec3 aPos;\n\nuniform mat4 model;\n\nvoid main()\n{\n    gl_Position = model * vec4(aPos, 1.0);\n}\0"};
	inline const std::string SHADERS_VBASIC_GLSL {"#version 330 core\nlayout (location = 0) in vec3 aPos;\nlayout (location = 1) in vec3 aNorm;\n\nout vec3 FragPos;\nout vec3 Normal;\n\nuniform mat4 model;\nuniform mat4 view;\nuniform mat4 projection;\n\nvoid main()\n{\n    FragPos = vec3(model * vec4(aPos, 1.0f));\n    Normal = mat3(transpose(inverse(model))) * aNorm;  \n    \n    gl_Position = projection * view * vec4(FragPos, 1.0f);\n}\0"};
	inline const std::string SHADERS_FWATER_GLSL {"#version 330 core\nin vec3 position;\nout vec4 FragColor;\n\nvoid main()\n{\n    FragColor = vec4(0.3f, 0.4f, 1.0f * (abs(cos(position.x * position.z)) / 1.5f +.3f), 1.0f);\n}\0"};
	inline const std::string SHADERS_FSIMPLEUNLIT_GLSL {"#version 330 core\nout vec4 FragColor;\n\nuniform vec3 color;\n\nvoid main()\n{\n    FragColor = vec4(color, 1.0f);\n}\0"};
	inline const std::string SHADERS_VWATER_GLSL {"#version 330 core\nlayout (location = 0) in vec3 aPos;\nlayout (location = 1) in vec3 aNorm;\nout vec3 position;\n\nuniform mat4 model;\nuniform mat4 view;\nuniform mat4 projection;\n\nvoid main()\n{\n    vec4 modelPosition = model * vec4(aPos.x, aPos.y, aPos.z, 1.0f);\n    position = modelPosition.xyz / modelPosition.w;\n\n    gl_Position = projection * view * modelPosition;\n}\0"};
	inline const std::string MODELS_SPHEREMIXED_OBJ {"# Blender 4.2.2 LTS\n# www.blender.org\no Cube\nv 0.500000 0.500000 -0.500000\nv 0.500000 -0.500000 -0.500000\nv 0.500000 0.500000 0.500000\nv 0.500000 -0.500000 0.500000\nv -0.500000 0.500000 -0.500000\nv -0.500000 -0.500000 -0.500000\nv -0.500000 0.500000 0.500000\nv -0.500000 -0.500000 0.500000\nv -0.609568 -0.609568 -0.000000\nv 0.000000 -0.609568 -0.609568\nv 0.609568 0.000000 -0.609568\nv -0.609568 -0.000000 0.609568\nv 0.609568 0.000000 0.609568\nv -0.609568 -0.000000 -0.609568\nv -0.000000 0.609568 0.609568\nv 0.609568 0.609568 0.000000\nv -0.000000 -0.609568 0.609568\nv -0.609568 0.609568 -0.000000\nv 0.000000 0.609568 -0.609568\nv 0.609568 -0.609568 0.000000\nv -0.000000 0.839506 -0.000000\nv 0.000000 0.000000 0.839506\nv -0.839506 0.000000 -0.000000\nv 0.000000 -0.839506 0.000000\nv 0.839506 0.000000 -0.000000\nv 0.000000 0.000000 -0.839506\nvn 0.5774 0.5774 -0.5774\nvn 0.3374 0.6656 -0.6656\nvn 0.3215 0.9469 -0.0000\nvn 0.7071 0.7071 -0.0000\nvn -0.3061 0.9015 -0.3061\nvn -0.3061 0.9015 0.3061\nvn 0.3374 0.6656 0.6656\nvn 0.5774 0.5774 0.5774\nvn 0.5774 -0.5774 0.5774\nvn 0.7071 -0.0000 0.7071\nvn 0.3215 -0.0000 0.9469\nvn 0.3374 -0.6656 0.6656\nvn -0.3061 0.3061 0.9015\nvn -0.3061 -0.3061 0.9015\nvn -0.9015 -0.3061 0.3061\nvn -0.9015 0.3061 0.3061\nvn -0.9015 0.3061 -0.3061\nvn -0.9015 -0.3061 -0.3061\nvn -0.3061 -0.9015 -0.3061\nvn 0.3374 -0.6656 -0.6656\nvn 0.5774 -0.5774 -0.5774\nvn 0.7071 -0.7071 -0.0000\nvn 0.3215 -0.9469 -0.0000\nvn -0.3061 -0.9015 0.3061\nvn 0.7071 -0.0000 -0.7071\nvn 1.0000 -0.0000 -0.0000\nvn -0.3061 -0.3061 -0.9015\nvn -0.3061 0.3061 -0.9015\nvn 0.3215 -0.0000 -0.9469\ns 1\nf 1//1 19//2 21//3 16//4\ns 0\nf 19//5 5//5 18//5 21//5\nf 21//6 18//6 7//6 15//6\ns 1\nf 16//4 21//3 15//7 3//8\nf 4//9 13//10 22//11 17//12\nf 13//10 3//8 15//7 22//11\ns 0\nf 22//13 15//13 7//13 12//13\nf 17//14 22//14 12//14 8//14\nf 8//15 12//15 23//15 9//15\nf 12//16 7//16 18//16 23//16\nf 23//17 18//17 5//17 14//17\nf 9//18 23//18 14//18 6//18\nf 6//19 10//19 24//19 9//19\ns 1\nf 10//20 2//21 20//22 24//23\nf 24//23 20//22 4//9 17//12\ns 0\nf 9//24 24//24 17//24 8//24\ns 1\nf 2//21 11//25 25//26 20//22\nf 11//25 1//1 16//4 25//26\nf 25//26 16//4 3//8 13//10\nf 20//22 25//26 13//10 4//9\ns 0\nf 6//27 14//27 26//27 10//27\nf 14//28 5//28 19//28 26//28\ns 1\nf 26//29 19//2 1//1 11//25\nf 10//20 26//29 11//25 2//21\n\0"};
	inline const std::string MODELS_SPHERENONORMALS_OBJ {"# Blender 4.2.2 LTS\n# www.blender.org\no Cube\nv 0.500000 0.500000 -0.500000\nv 0.500000 -0.500000 -0.500000\nv 0.500000 0.500000 0.500000\nv 0.500000 -0.500000 0.500000\nv -0.500000 0.500000 -0.500000\nv -0.500000 -0.500000 -0.500000\nv -0.500000 0.500000 0.500000\nv -0.500000 -0.500000 0.500000\nv -0.609568 -0.609568 -0.000000\nv 0.000000 -0.609568 -0.609568\nv 0.609568 0.000000 -0.609568\nv -0.609568 -0.000000 0.609568\nv 0.609568 0.000000 0.609568\nv -0.609568 -0.000000 -0.609568\nv -0.000000 0.609568 0.609568\nv 0.609568 0.609568 0.000000\nv -0.000000 -0.609568 0.609568\nv -0.609568 0.609568 -0.000000\nv 0.000000 0.609568 -0.609568\nv 0.609568 -0.609568 0.000000\nv -0.000000 0.839506 -0.000000\nv 0.000000 0.000000 0.839506\nv -0.839506 0.000000 -0.000000\nv 0.000000 -0.839506 0.000000\nv 0.839506 0.000000 -0.000000\nv 0.000000 0.000000 -0.839506\ns 0\nf 1 19 21 16\nf 19 5 18 21\nf 21 18 7 15\nf 16 21 15 3\nf 4 13 22 17\nf 13 3 15 22\nf 22 15 7 12\nf 17 22 12 8\nf 8 12 23 9\nf 12 7 18 23\nf 23 18 5 14\nf 9 23 14 6\nf 6 10 24 9\nf 10 2 20 24\nf 24 20 4 17\nf 9 24 17 8\nf 2 11 25 20\nf 11 1 16 25\nf 25 16 3 13\nf 20 25 13 4\nf 6 14 26 10\nf 14 5 19 26\nf 26 19 1 11\nf 10 26 11 2\n\0"};
	inline const std::string MODELS_SPHERESMOOTH_OBJ {"# Blender 4.2.2 LTS\n# www.blender.org\no Cube\nv 0.500000 0.500000 -0.500000\nv 0.500000 -0.500000 -0.500000\nv 0.500000 0.500000 0.500000\nv 0.500000 -0.500000 0.500000\nv -0.500000 0.500000 -0.500000\nv -0.500000 -0.500000 -0.500000\nv -0.500000 0.500000 0.500000\nv -0.500000 -0.500000 0.500000\nv -0.609568 -0.609568 -0.000000\nv 0.000000 -0.609568 -0.609568\nv 0.609568 0.000000 -0.609568\nv -0.609568 -0.000000 0.609568\nv 0.609568 0.000000 0.609568\nv -0.609568 -0.000000 -0.609568\nv -0.000000 0.609568 0.609568\nv 0.609568 0.609568 0.000000\nv -0.000000 -0.609568 0.609568\nv -0.609568 0.609568 -0.000000\nv 0.000000 0.609568 -0.609568\nv 0.609568 -0.609568 0.000000\nv -0.000000 0.839506 -0.000000\nv 0.000000 0.000000 0.839506\nv -0.839506 0.000000 -0.000000\nv 0.000000 -0.839506 0.000000\nv 0.839506 0.000000 -0.000000\nv 0.000000 0.000000 -0.839506\nvn 0.5774 0.5774 -0.5774\nvn 0.5774 -0.5774 -0.5774\nvn 0.5774 0.5774 0.5774\nvn 0.5774 -0.5774 0.5774\nvn -0.5774 0.5774 -0.5774\nvn -0.5774 -0.5774 -0.5774\nvn -0.5774 0.5774 0.5774\nvn -0.5774 -0.5774 0.5774\nvn -0.7071 -0.7071 -0.0000\nvn -0.0000 -0.7071 -0.7071\nvn 0.7071 -0.0000 -0.7071\nvn -0.7071 -0.0000 0.7071\nvn 0.7071 -0.0000 0.7071\nvn -0.7071 -0.0000 -0.7071\nvn -0.0000 0.7071 0.7071\nvn 0.7071 0.7071 -0.0000\nvn -0.0000 -0.7071 0.7071\nvn -0.7071 0.7071 -0.0000\nvn -0.0000 0.7071 -0.7071\nvn 0.7071 -0.7071 -0.0000\nvn -0.0000 1.0000 -0.0000\nvn -0.0000 -0.0000 1.0000\nvn -1.0000 -0.0000 -0.0000\nvn -0.0000 -1.0000 -0.0000\nvn 1.0000 -0.0000 -0.0000\nvn -0.0000 -0.0000 -1.0000\ns 1\nf 1//1 19//19 21//21 16//16\nf 19//19 5//5 18//18 21//21\nf 21//21 18//18 7//7 15//15\nf 16//16 21//21 15//15 3//3\nf 4//4 13//13 22//22 17//17\nf 13//13 3//3 15//15 22//22\nf 22//22 15//15 7//7 12//12\nf 17//17 22//22 12//12 8//8\nf 8//8 12//12 23//23 9//9\nf 12//12 7//7 18//18 23//23\nf 23//23 18//18 5//5 14//14\nf 9//9 23//23 14//14 6//6\nf 6//6 10//10 24//24 9//9\nf 10//10 2//2 20//20 24//24\nf 24//24 20//20 4//4 17//17\nf 9//9 24//24 17//17 8//8\nf 2//2 11//11 25//25 20//20\nf 11//11 1//1 16//16 25//25\nf 25//25 16//16 3//3 13//13\nf 20//20 25//25 13//13 4//4\nf 6//6 14//14 26//26 10//10\nf 14//14 5//5 19//19 26//26\nf 26//26 19//19 1//1 11//11\nf 10//10 26//26 11//11 2//2\n\0"};
	inline const std::string MODELS_SPHEREFLAT_OBJ {"# Blender 4.2.2 LTS\n# www.blender.org\no Cube\nv 0.500000 0.500000 -0.500000\nv 0.500000 -0.500000 -0.500000\nv 0.500000 0.500000 0.500000\nv 0.500000 -0.500000 0.500000\nv -0.500000 0.500000 -0.500000\nv -0.500000 -0.500000 -0.500000\nv -0.500000 0.500000 0.500000\nv -0.500000 -0.500000 0.500000\nv -0.609568 -0.609568 -0.000000\nv 0.000000 -0.609568 -0.609568\nv 0.609568 0.000000 -0.609568\nv -0.609568 -0.000000 0.609568\nv 0.609568 0.000000 0.609568\nv -0.609568 -0.000000 -0.609568\nv -0.000000 0.609568 0.609568\nv 0.609568 0.609568 0.000000\nv -0.000000 -0.609568 0.609568\nv -0.609568 0.609568 -0.000000\nv 0.000000 0.609568 -0.609568\nv 0.609568 -0.609568 0.000000\nv -0.000000 0.839506 -0.000000\nv 0.000000 0.000000 0.839506\nv -0.839506 0.000000 -0.000000\nv 0.000000 -0.839506 0.000000\nv 0.839506 0.000000 -0.000000\nv 0.000000 0.000000 -0.839506\nvn 0.3061 0.9015 -0.3061\nvn -0.3061 0.9015 -0.3061\nvn -0.3061 0.9015 0.3061\nvn 0.3061 0.9015 0.3061\nvn 0.3061 -0.3061 0.9015\nvn 0.3061 0.3061 0.9015\nvn -0.3061 0.3061 0.9015\nvn -0.3061 -0.3061 0.9015\nvn -0.9015 -0.3061 0.3061\nvn -0.9015 0.3061 0.3061\nvn -0.9015 0.3061 -0.3061\nvn -0.9015 -0.3061 -0.3061\nvn -0.3061 -0.9015 -0.3061\nvn 0.3061 -0.9015 -0.3061\nvn 0.3061 -0.9015 0.3061\nvn -0.3061 -0.9015 0.3061\nvn 0.9015 -0.3061 -0.3061\nvn 0.9015 0.3061 -0.3061\nvn 0.9015 0.3061 0.3061\nvn 0.9015 -0.3061 0.3061\nvn -0.3061 -0.3061 -0.9015\nvn -0.3061 0.3061 -0.9015\nvn 0.3061 0.3061 -0.9015\nvn 0.3061 -0.3061 -0.9015\ns 0\nf 1//1 19//1 21//1 16//1\nf 19//2 5//2 18//2 21//2\nf 21//3 18//3 7//3 15//3\nf 16//4 21//4 15//4 3//4\nf 4//5 13//5 22//5 17//5\nf 13//6 3//6 15//6 22//6\nf 22//7 15//7 7//7 12//7\nf 17//8 22//8 12//8 8//8\nf 8//9 12//9 23//9 9//9\nf 12//10 7//10 18//10 23//10\nf 23//11 18//11 5//11 14//11\nf 9//12 23//12 14//12 6//12\nf 6//13 10//13 24//13 9//13\nf 10//14 2//14 20//14 24//14\nf 24//15 20//15 4//15 17//15\nf 9//16 24//16 17//16 8//16\nf 2//17 11//17 25//17 20//17\nf 11//18 1//18 16//18 25//18\nf 25//19 16//19 3//19 13//19\nf 20//20 25//20 13//20 4//20\nf 6//21 14//21 26//21 10//21\nf 14//22 5//22 19//22 26//22\nf 26//23 19//23 1//23 11//23\nf 10//24 26//24 11//24 2//24\n\0"};
}
